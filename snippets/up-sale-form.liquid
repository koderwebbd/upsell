{% comment %}https://www.youtube.com/watch?v=WkT3rpTeGGU&t=279s&ab_channel=CodingwithJan-ShopifyDeveloper{% endcomment %}
    <up-sale-form>
      <form method="post" action="/cart/add" id="up_sale">

        
        {%- liquid
          assign product_id = '8007249494325' | times: 1
          assign up_sale_product = collections.all.products | where: 'id', product_id
          assign up_sale_product = up_sale_product[0]
        -%}
        <div class="up_sale_wrap">
        <input
                type="hidden"
                name="id"
                value="{{ up_sale_product.selected_or_first_available_variant.id }}"
                disabled
                class="product-variant-id"
              >

         {% comment %} <div class="heading">{{ up_sale_product.title }}</div>{% endcomment %}
          {% comment %}<select name="id" id="">
            <option value="{{ up_sale_product.selected_or_first_available_variant.id }}" selected="selected"></option>
          </select>{% endcomment %}
          {% comment %}<button id="up_sale_btn" class="up_sale_btn" name="add">Add to cart</button>{% endcomment %}

          <button
            d="up_sale_btn" 
            class="up_sale_btn button button--full-width button--secondary"
            type="submit"
            name="add"
          
            {% if product.selected_or_first_available_variant.available == false or quantity_rule_soldout %}
              disabled
            {% endif %}
          >
        <span>
          {%- if product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
            {{ 'products.product.sold_out' | t }}
          {%- else -%}
            {{ 'products.product.add_to_cart' | t }}
          {%- endif -%}
        </span>
        <div class="loading-overlay__spinner hidden">
          <svg
            aria-hidden="true"
            focusable="false"
            class="spinner"
            viewBox="0 0 66 66"
            xmlns="http://www.w3.org/2000/svg"
          >
            <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
          </svg>
        </div>
      </button>


        </div>

      </form>
    </up-sale-form>
<script>
//var UpSaleVariantID = [];
// document.querySelectorAll('#upsale_variant_id').forEach((element => {
//   element.addEventListener('change', function(e){

//     var parent = this.closest('.up_sale_wrap');
//     var upsale_variantID = parent.querySelector('[name=id]').value = this.value;

//     // var form = document.querySelector('up-sale-form');
//     // form.querySelector('[name=id]').value = upsale_variantID;
//   });
// }));

if (!customElements.get('upsale-select')) {
customElements.define('upsale-select', class UpSaleSelect extends HTMLElement {
  constructor() {
    super();

    this.select = this.querySelector('select');
    this.addEventListener('change', this.onChange.bind(this));
  }

  onChange(evt) {
    console.log(this.select)
    var parent = this.closest('.up_sale_wrap');
    var upsale_variantID = parent.querySelector('[name=id]').value = this.select.value;
  }
 
});
}
if (!customElements.get('up-sale-cart-item')) {
customElements.define('up-sale-cart-item', class UpSellCartItem extends HTMLElement {
  constructor() {
    super();

    this.input = this.querySelector('[name=id]');
    this.button = this.querySelector('[type="submit"]');
    this.addEventListener('click', this.onSubmit.bind(this));
    
  }

  onSubmit(evt) {
    //console.log(this.button)
    //var parent = this.closest('.up_sale_wrap');
    //var upsale_variantID = parent.querySelector('[name=id]').value = this.select.value;
    

    var form = document.querySelector('up-sale-form');
    form.querySelector('[name=id]').value = this.input.value;

    //console.log(this.input.value)
  }

   
 
});
}

// document.querySelectorAll('#up_sale_btn').forEach((element => {
//   element.addEventListener('click', function(e){
//     var parent = this.closest('.up_sale_wrap');
//     var upsale_variantID = parent.querySelector('[name=id]').value;

//     var form = document.querySelector('up-sale-form');
//     form.querySelector('[name=id]').value = upsale_variantID;

//     //console.log(upsale_variantID)
//   });
// }));
if (!customElements.get('up-sale-form')) {
customElements.define('up-sale-form', class UpSaleForm extends HTMLElement {
  constructor() {
    super();

    this.form = this.querySelector('form');
    this.form.querySelector('[name=id]').disabled = false;
    this.form.addEventListener('submit', this.onSubmitHandler.bind(this));
    this.cart = document.querySelector('cart-notification') || document.querySelector('cart-drawer');
    //this.submitButton = this.querySelector('[type="submit"]');
    this.submitButton = this.querySelector('[type="submit"]');
    //this.submitButton = document.querySelector('button[form="up_sale"]');

    this.variantid = this.form.querySelector('[name=id]').value;

    //console.log(this.variantid)
    if (document.querySelector('cart-drawer')) this.submitButton.setAttribute('aria-haspopup', 'dialog');
  }

  onSubmitHandler(evt) {
    evt.preventDefault();
    if (this.submitButton.getAttribute('aria-disabled') === 'true') return;

    this.handleErrorMessage();

    this.submitButton.setAttribute('aria-disabled', true);
    this.submitButton.classList.add('loading');
    this.querySelector('.loading-overlay__spinner').classList.remove('hidden');

    const config = fetchConfig('javascript');
    config.headers['X-Requested-With'] = 'XMLHttpRequest';
    delete config.headers['Content-Type'];

    const formData = new FormData(this.form);
    if (this.cart) {
      formData.append('sections', this.cart.getSectionsToRender().map((section) => section.id));
      formData.append('sections_url', window.location.pathname);
      this.cart.setActiveElement(document.activeElement);
    }
    config.body = formData;

    fetch(`${routes.cart_add_url}`, config)
      .then((response) => response.json())
      .then((response) => {
        if (response.status) {

          this.handleErrorMessage(response.description);

          const soldOutMessage = this.submitButton.querySelector('.sold-out-message');
          if (!soldOutMessage) return;
          this.submitButton.setAttribute('aria-disabled', true);
          this.submitButton.querySelector('span').classList.add('hidden');
          soldOutMessage.classList.remove('hidden');
          this.error = true;
          return;
        } else if (!this.cart) {
          window.location = window.routes.cart_url;
          return;
        }

        if (!this.error) publish(PUB_SUB_EVENTS.cartUpdate, {source: 'product-form'});
        this.error = false;
        const quickAddModal = this.closest('quick-add-modal');
        if (quickAddModal) {
          document.body.addEventListener('modalClosed', () => {
            setTimeout(() => { this.cart.renderContents(response) });
          }, { once: true });
          quickAddModal.hide(true);
        } else {
          console.log(response)
          this.cart.renderContents(response);
        }
      })
      .catch((e) => {
        console.error(e);
      })
      .finally(() => {
        //console.log('ok', this.variantid)
        //UpSaleVariantID.push(this.variantid);

        //console.log(UpSaleVariantID)

        this.submitButton.classList.remove('loading');
        if (this.cart && this.cart.classList.contains('is-empty')) this.cart.classList.remove('is-empty');
        if (!this.error) this.submitButton.removeAttribute('aria-disabled');
        this.querySelector('.loading-overlay__spinner').classList.add('hidden');
      });
  }

  handleErrorMessage(errorMessage = false) {
    this.errorMessageWrapper = this.errorMessageWrapper || this.querySelector('.product-form__error-message-wrapper');
    if (!this.errorMessageWrapper) return;
    this.errorMessage = this.errorMessage || this.errorMessageWrapper.querySelector('.product-form__error-message');

    this.errorMessageWrapper.toggleAttribute('hidden', !errorMessage);

    if (errorMessage) {
      this.errorMessage.textContent = errorMessage;
    }
  }
});
}

</script>
